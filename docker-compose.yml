version: '3.8'

services:
  # Web Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: grocery-laravel
    container_name: grocery-app
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mongodb
      - MONGO_DB_HOST=mongodb
      - MONGO_DB_PORT=27017
      - MONGO_DB_DATABASE=${MONGO_DB_DATABASE}
      - MONGO_DB_USERNAME=${MONGO_DB_USERNAME}
      - MONGO_DB_PASSWORD=${MONGO_DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SESSION_DRIVER=redis
      - CACHE_DRIVER=redis
      - QUEUE_CONNECTION=redis
    volumes:
      - app-storage:/var/www/html/storage
    networks:
      - app-network
    depends_on:
      - mongodb
      - redis

  # Web Server (Nginx)
  webserver:
    image: nginx:alpine
    container_name: grocery-webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/nginx/ssl/
    networks:
      - app-network
    depends_on:
      - app

  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: grocery-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_DB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - app-network
    command: ["--replSet", "rs0", "--bind_ip_all"]

  # MongoDB Express (Admin Interface)
  mongo-express:
    image: mongo-express
    container_name: grocery-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_DB_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_DB_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    networks:
      - app-network
    depends_on:
      - mongodb

  # Redis
  redis:
    image: redis:alpine
    container_name: grocery-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: grocery-queue
    restart: unless-stopped
    command: php artisan queue:work --tries=3
    environment:
      - APP_ENV=production
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - app-network
    depends_on:
      - app
      - redis

  # Monitoring Service
  monitoring:
    image: prom/prometheus
    container_name: grocery-monitoring
    restart: unless-stopped
    volumes:
      - ./docker/prometheus/:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  app-storage:
  mongodb-data:
  redis-data:
  prometheus-data: